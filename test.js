import { AbiCoder, Contract, JsonRpcProvider, Wallet, ethers } from "ethers";
import dotenv from "dotenv";
dotenv.config();

import VaultAbi from "./ABIs/vault.json" assert { type: "json" };
import DiamondABI from "./ABIs/diamond.json" assert { type: "json" };

const FUNCTIONCALL_TUPLE =
  "tuple(address target_address, bytes[] args, string signature)";

const STEP_TUPLE =
  "tuple(bytes func, uint256[] childrenIndices, bytes[] conditions, bool isCallback)";

const LIFI_TUPLE =
  "tuple(address callTo, address approveTo, address sendingAssetId, address receivingAssetId, uint256 fromAmount, bytes callData, bool requiresDeposit)";

const first = AbiCoder.defaultAbiCoder().decode(
  [FUNCTIONCALL_TUPLE],
  "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000baf45b60f69eca4616cde172d3961c156946e831000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000220000fc4f964fd7c2d688df7cb26716133dc797c89e677cd35c737d6b8ce3e336747d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000fc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002462616c616e63654f664c5028616464726573732c616464726573732c627974657333322900000000000000000000000000000000000000000000000000000000"
);

const second = AbiCoder.defaultAbiCoder().decode(
  [FUNCTIONCALL_TUPLE],
  "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001262616c616e63654f662861646472657373290000000000000000000000000000"
);

console.log(first)
console.log(second)


// console.log("Root", root);
// console.log("Idx 1", indexOne);
// console.log("idx 4", indexFour);

// // // const address = "0x9592Cf2951eF6ABd5DfC414dB56770f24470a2A7";

// const provider = new JsonRpcProvider(process.env.ARBITRUM_RPC_URL);
// const signer = new Wallet(process.env.PRIVATE_KEY, provider);
// // // const strategyContract = new Contract(address, VaultAbi, provider);

// await signer.sendTransaction({
//   gasLimit: 10000000,
//   to: "0xbAF45B60F69eCa4616CdE172D3961C156946e831",
//   data: "0x08c379a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010416464696e67204c70204661696c656400000000000000000000000000000000",
// });
